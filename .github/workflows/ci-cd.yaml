name: CI Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache Yarn Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile

  lint_and_test:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install ESLint Config
        run: npm install eslint-config-standard-with-typescript --save-dev

      - name: Run ESLint
        run: npx eslint src --ext .js,.jsx,.ts,.tsx --fix

      - name: Clear Jest Cache
        run: yarn jest --clearCache

      - name: Run Jest Tests
        run: yarn test

  type_check:
    needs: install_dependencies
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache Yarn Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install TypeScript
        run: yarn add typescript --dev

      - name: Run TypeScript Compiler
        run: yarn tsc --noEmit

  build_ios:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache Yarn Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Login to Expo CLI
        run: echo $EXPO_CLI_PASSWORD | expo login -u $EXPO_CLI_USERNAME --non-interactive
        env:
          EXPO_CLI_USERNAME: ${{ secrets.EXPO_CLI_USERNAME }}
          EXPO_CLI_PASSWORD: ${{ secrets.EXPO_CLI_PASSWORD }}

      - name: Build iOS app with EAS
        run: eas build --platform ios --non-interactive

